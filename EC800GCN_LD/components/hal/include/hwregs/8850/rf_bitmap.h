/* Copyright (C) 2018 RDA Technologies Limited and/or its affiliates("RDA").
 * All rights reserved.
 *
 * This software is supplied "AS IS" without any warranties.
 * RDA assumes no responsibility or liability for the use of the software,
 * conveys no license or title under any patent, copyright, or mask work
 * right to the product. RDA reserves the right to make changes in the
 * software without notification.  RDA also make no representation or
 * warranty that such application will be suitable for the specified use
 * without further testing or modification.
 */

#ifndef _RF_BITMAP_H_
#define _RF_BITMAP_H_

// Auto generated by dtools(see dtools.txt for its version).
// Don't edit it manually!

#define REG_RF_BITMAP_SET_OFFSET (1024)
#define REG_RF_BITMAP_CLR_OFFSET (2048)

#define REG_RF_BITMAP_BASE (0x50036000)

typedef volatile struct
{
    uint32_t sysctrl1;      // 0x00000000
    uint32_t sysctrl2;      // 0x00000004
    uint32_t sysctrl3;      // 0x00000008
    uint32_t sysctrl4;      // 0x0000000c
    uint32_t sysctrl5;      // 0x00000010
    uint32_t sysctrl6;      // 0x00000014
    uint32_t sysctrl7;      // 0x00000018
    uint32_t __28[3];       // 0x0000001c
    uint32_t sysstat1;      // 0x00000028
    uint32_t sysstat2;      // 0x0000002c
    uint32_t sysstat3;      // 0x00000030
    uint32_t __52[3];       // 0x00000034
    uint32_t sysstat7;      // 0x00000040
    uint32_t sysstat8;      // 0x00000044
    uint32_t sysstat9;      // 0x00000048
    uint32_t sysstat10;     // 0x0000004c
    uint32_t sysstat11;     // 0x00000050
    uint32_t sysstat12;     // 0x00000054
    uint32_t sysstat13;     // 0x00000058
    uint32_t sysstat14;     // 0x0000005c
    uint32_t sysstat15;     // 0x00000060
    uint32_t sysstat16;     // 0x00000064
    uint32_t sysstat17;     // 0x00000068
    uint32_t sysstat18;     // 0x0000006c
    uint32_t sysstat19;     // 0x00000070
    uint32_t sysstat20;     // 0x00000074
    uint32_t sysstat21;     // 0x00000078
    uint32_t sysstat22;     // 0x0000007c
    uint32_t sysstat23;     // 0x00000080
    uint32_t __132[1];      // 0x00000084
    uint32_t sysctrl11;     // 0x00000088
    uint32_t sysctrl12;     // 0x0000008c
    uint32_t sysctrl13;     // 0x00000090
    uint32_t sysctrl14;     // 0x00000094
    uint32_t sysctrl15;     // 0x00000098
    uint32_t sysctrl16;     // 0x0000009c
    uint32_t sysctrl17;     // 0x000000a0
    uint32_t sysctrl18;     // 0x000000a4
    uint32_t sysctrl19;     // 0x000000a8
    uint32_t __172[213];    // 0x000000ac
    uint32_t sysctrl1_set;  // 0x00000400
    uint32_t __1028[33];    // 0x00000404
    uint32_t sysctrl11_set; // 0x00000488
    uint32_t sysctrl12_set; // 0x0000048c
    uint32_t sysctrl13_set; // 0x00000490
    uint32_t sysctrl14_set; // 0x00000494
    uint32_t sysctrl15_set; // 0x00000498
    uint32_t sysctrl16_set; // 0x0000049c
    uint32_t sysctrl17_set; // 0x000004a0
    uint32_t sysctrl18_set; // 0x000004a4
    uint32_t sysctrl19_set; // 0x000004a8
    uint32_t __1196[213];   // 0x000004ac
    uint32_t sysctrl1_clr;  // 0x00000800
    uint32_t __2052[33];    // 0x00000804
    uint32_t sysctrl11_clr; // 0x00000888
    uint32_t sysctrl12_clr; // 0x0000088c
    uint32_t sysctrl13_clr; // 0x00000890
    uint32_t sysctrl14_clr; // 0x00000894
    uint32_t sysctrl15_clr; // 0x00000898
    uint32_t sysctrl16_clr; // 0x0000089c
    uint32_t sysctrl17_clr; // 0x000008a0
    uint32_t sysctrl18_clr; // 0x000008a4
    uint32_t sysctrl19_clr; // 0x000008a8
} HWP_RF_BITMAP_T;

#define hwp_rfBitmap ((HWP_RF_BITMAP_T *)REG_ACCESS_ADDRESS(REG_RF_BITMAP_BASE))

// sysctrl1
typedef union {
    uint32_t v;
    struct
    {
        uint32_t rg_bitmap_enable : 1;                 // [0]
        uint32_t rg_bitmap_wptr_clr : 1;               // [1]
        uint32_t rg_gnss_latch_wptr_enable : 1;        // [2]
        uint32_t rg_latch_wptr_enable : 1;             // [3]
        uint32_t rg_cnt_122m88_enable : 1;             // [4]
        uint32_t rg_cnt_122m88_clr : 1;                // [5]
        uint32_t rg_gnss_latch_cnt_122m88_enable : 1;  // [6]
        uint32_t rg_latch_cnt_122m88_enable : 1;       // [7]
        uint32_t rg_adj_cnt_122m88_enable : 1;         // [8]
        uint32_t rg_adj_cnt_122m88_ms_num_enable : 1;  // [9]
        uint32_t rg_adj_cnt_122m88_ms_num_val_sel : 1; // [10]
        uint32_t rg_clk_cnt_sel : 1;                   // [11]
        uint32_t __31_12 : 20;                         // [31:12]
    } b;
} REG_RF_BITMAP_SYSCTRL1_T;

// sysctrl2
typedef union {
    uint32_t v;
    struct
    {
        uint32_t rg_bitmap_cycle_index_num : 8; // [7:0]
        uint32_t __31_8 : 24;                   // [31:8]
    } b;
} REG_RF_BITMAP_SYSCTRL2_T;

// sysctrl3
typedef union {
    uint32_t v;
    struct
    {
        uint32_t rg_cnt_122m88_ms_num_l : 16; // [15:0]
        uint32_t __31_16 : 16;                // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL3_T;

// sysctrl4
typedef union {
    uint32_t v;
    struct
    {
        uint32_t rg_cnt_122m88_ms_num_h : 2; // [1:0]
        uint32_t __31_2 : 30;                // [31:2]
    } b;
} REG_RF_BITMAP_SYSCTRL4_T;

// sysctrl5
typedef union {
    uint32_t v;
    struct
    {
        uint32_t rg_cnt_122m88_adj_val_l : 16; // [15:0]
        uint32_t __31_16 : 16;                 // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL5_T;

// sysctrl6
typedef union {
    uint32_t v;
    struct
    {
        uint32_t rg_cnt_122m88_adj_val_m : 16; // [15:0]
        uint32_t __31_16 : 16;                 // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL6_T;

// sysctrl7
typedef union {
    uint32_t v;
    struct
    {
        uint32_t rg_cnt_122m88_adj_val_h : 16; // [15:0]
        uint32_t __31_16 : 16;                 // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL7_T;

// sysstat1
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_cnt_122m88_value_l : 16; // [15:0], read only
        uint32_t __31_16 : 16;                  // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT1_T;

// sysstat2
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_cnt_122m88_value_m : 16; // [15:0], read only
        uint32_t __31_16 : 16;                  // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT2_T;

// sysstat3
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_cnt_122m88_value_h : 16; // [15:0], read only
        uint32_t __31_16 : 16;                  // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT3_T;

// sysstat7
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_wptr : 8; // [7:0], read only
        uint32_t __31_8 : 24;                       // [31:8]
    } b;
} REG_RF_BITMAP_SYSSTAT7_T;

// sysstat8
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num0 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                       // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT8_T;

// sysstat9
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num1 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                       // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT9_T;

// sysstat10
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num2 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                       // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT10_T;

// sysstat11
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num3 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                       // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT11_T;

// sysstat12
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num4 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                       // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT12_T;

// sysstat13
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num5 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                       // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT13_T;

// sysstat14
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num6 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                       // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT14_T;

// sysstat15
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num7 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                       // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT15_T;

// sysstat16
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num8 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                       // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT16_T;

// sysstat17
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num9 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                       // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT17_T;

// sysstat18
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num10 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                        // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT18_T;

// sysstat19
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num11 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                        // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT19_T;

// sysstat20
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num12 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                        // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT20_T;

// sysstat21
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num13 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                        // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT21_T;

// sysstat22
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num14 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                        // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT22_T;

// sysstat23
typedef union {
    uint32_t v;
    struct
    {
        uint32_t latch_bitmap_cycle_index_num15 : 16; // [15:0], read only
        uint32_t __31_16 : 16;                        // [31:16]
    } b;
} REG_RF_BITMAP_SYSSTAT23_T;

// sysctrl11
typedef union {
    uint32_t v;
    struct
    {
        uint32_t lte_gnss_mail_flag : 16; // [15:0]
        uint32_t __31_16 : 16;            // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL11_T;

// sysctrl12
typedef union {
    uint32_t v;
    struct
    {
        uint32_t lte_use_rf_timer0 : 16; // [15:0]
        uint32_t __31_16 : 16;           // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL12_T;

// sysctrl13
typedef union {
    uint32_t v;
    struct
    {
        uint32_t lte_use_rf_timer1 : 16; // [15:0]
        uint32_t __31_16 : 16;           // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL13_T;

// sysctrl14
typedef union {
    uint32_t v;
    struct
    {
        uint32_t lte_use_rf_timer2 : 16; // [15:0]
        uint32_t __31_16 : 16;           // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL14_T;

// sysctrl15
typedef union {
    uint32_t v;
    struct
    {
        uint32_t lte_use_rf_timer3 : 16; // [15:0]
        uint32_t __31_16 : 16;           // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL15_T;

// sysctrl16
typedef union {
    uint32_t v;
    struct
    {
        uint32_t lte_use_rf_timer4 : 16; // [15:0]
        uint32_t __31_16 : 16;           // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL16_T;

// sysctrl17
typedef union {
    uint32_t v;
    struct
    {
        uint32_t lte_use_rf_timer5 : 16; // [15:0]
        uint32_t __31_16 : 16;           // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL17_T;

// sysctrl18
typedef union {
    uint32_t v;
    struct
    {
        uint32_t lte_use_rf_timer6 : 16; // [15:0]
        uint32_t __31_16 : 16;           // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL18_T;

// sysctrl19
typedef union {
    uint32_t v;
    struct
    {
        uint32_t lte_use_rf_timer7 : 16; // [15:0]
        uint32_t __31_16 : 16;           // [31:16]
    } b;
} REG_RF_BITMAP_SYSCTRL19_T;

// sysctrl1
#define RF_BITMAP_RG_BITMAP_ENABLE (1 << 0)
#define RF_BITMAP_RG_BITMAP_WPTR_CLR (1 << 1)
#define RF_BITMAP_RG_GNSS_LATCH_WPTR_ENABLE (1 << 2)
#define RF_BITMAP_RG_LATCH_WPTR_ENABLE (1 << 3)
#define RF_BITMAP_RG_CNT_122M88_ENABLE (1 << 4)
#define RF_BITMAP_RG_CNT_122M88_CLR (1 << 5)
#define RF_BITMAP_RG_GNSS_LATCH_CNT_122M88_ENABLE (1 << 6)
#define RF_BITMAP_RG_LATCH_CNT_122M88_ENABLE (1 << 7)
#define RF_BITMAP_RG_ADJ_CNT_122M88_ENABLE (1 << 8)
#define RF_BITMAP_RG_ADJ_CNT_122M88_MS_NUM_ENABLE (1 << 9)
#define RF_BITMAP_RG_ADJ_CNT_122M88_MS_NUM_VAL_SEL (1 << 10)
#define RF_BITMAP_RG_CLK_CNT_SEL (1 << 11)

// sysctrl2
#define RF_BITMAP_RG_BITMAP_CYCLE_INDEX_NUM(n) (((n)&0xff) << 0)

// sysctrl3
#define RF_BITMAP_RG_CNT_122M88_MS_NUM_L(n) (((n)&0xffff) << 0)

// sysctrl4
#define RF_BITMAP_RG_CNT_122M88_MS_NUM_H(n) (((n)&0x3) << 0)

// sysctrl5
#define RF_BITMAP_RG_CNT_122M88_ADJ_VAL_L(n) (((n)&0xffff) << 0)

// sysctrl6
#define RF_BITMAP_RG_CNT_122M88_ADJ_VAL_M(n) (((n)&0xffff) << 0)

// sysctrl7
#define RF_BITMAP_RG_CNT_122M88_ADJ_VAL_H(n) (((n)&0xffff) << 0)

// sysstat1
#define RF_BITMAP_LATCH_CNT_122M88_VALUE_L(n) (((n)&0xffff) << 0)

// sysstat2
#define RF_BITMAP_LATCH_CNT_122M88_VALUE_M(n) (((n)&0xffff) << 0)

// sysstat3
#define RF_BITMAP_LATCH_CNT_122M88_VALUE_H(n) (((n)&0xffff) << 0)

// sysstat7
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_WPTR(n) (((n)&0xff) << 0)

// sysstat8
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM0(n) (((n)&0xffff) << 0)

// sysstat9
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM1(n) (((n)&0xffff) << 0)

// sysstat10
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM2(n) (((n)&0xffff) << 0)

// sysstat11
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM3(n) (((n)&0xffff) << 0)

// sysstat12
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM4(n) (((n)&0xffff) << 0)

// sysstat13
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM5(n) (((n)&0xffff) << 0)

// sysstat14
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM6(n) (((n)&0xffff) << 0)

// sysstat15
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM7(n) (((n)&0xffff) << 0)

// sysstat16
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM8(n) (((n)&0xffff) << 0)

// sysstat17
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM9(n) (((n)&0xffff) << 0)

// sysstat18
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM10(n) (((n)&0xffff) << 0)

// sysstat19
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM11(n) (((n)&0xffff) << 0)

// sysstat20
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM12(n) (((n)&0xffff) << 0)

// sysstat21
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM13(n) (((n)&0xffff) << 0)

// sysstat22
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM14(n) (((n)&0xffff) << 0)

// sysstat23
#define RF_BITMAP_LATCH_BITMAP_CYCLE_INDEX_NUM15(n) (((n)&0xffff) << 0)

// sysctrl11
#define RF_BITMAP_LTE_GNSS_MAIL_FLAG(n) (((n)&0xffff) << 0)

// sysctrl12
#define RF_BITMAP_LTE_USE_RF_TIMER0(n) (((n)&0xffff) << 0)

// sysctrl13
#define RF_BITMAP_LTE_USE_RF_TIMER1(n) (((n)&0xffff) << 0)

// sysctrl14
#define RF_BITMAP_LTE_USE_RF_TIMER2(n) (((n)&0xffff) << 0)

// sysctrl15
#define RF_BITMAP_LTE_USE_RF_TIMER3(n) (((n)&0xffff) << 0)

// sysctrl16
#define RF_BITMAP_LTE_USE_RF_TIMER4(n) (((n)&0xffff) << 0)

// sysctrl17
#define RF_BITMAP_LTE_USE_RF_TIMER5(n) (((n)&0xffff) << 0)

// sysctrl18
#define RF_BITMAP_LTE_USE_RF_TIMER6(n) (((n)&0xffff) << 0)

// sysctrl19
#define RF_BITMAP_LTE_USE_RF_TIMER7(n) (((n)&0xffff) << 0)

#endif // _RF_BITMAP_H_
